/* MIT License 

* Copyright (c) 2020 jianlinjiang

*/

enclave {
  from "sgx_tkey_exchange.edl" import *;

  include "sgx_key_exchange.h"
  include "sgx_trts.h"
  trusted {
    public sgx_status_t ecall_enclave_ra_close([out] sgx_ra_context_t *p_context);
    public sgx_status_t ecall_enclave_ra_init(int b_pse, [out] sgx_ra_context_t *p_context, [in] sgx_ec256_public_t *p_client_pub);
    public sgx_status_t ecall_enclave_ecc_init();
    public sgx_status_t ecall_enclave_ecc_shutdown();
    
    public sgx_status_t ecall_create_weights_load_context([in, size = context_size] sgx_ra_context_t *context_arr, [in, size = context_size] int *index_arr, size_t context_size);

    public sgx_status_t ecall_load_weights([in, size = length] unsigned char* p_ciphertext, unsigned int length, [in, size = 16]unsigned char* p_tag, int client_index);

    public void ecall_aggregation([in, size = size] void* arguments, size_t size);

    public void ecall_free_load_weight_context();
  };

  untrusted {
    void ocall_log(int severity, [in, string] const char* file, int line,[in, string] const char* log_str);
    void ocall_save_aggregation_result(int layer_index, [in, size = length] unsigned char *encrypted_data, unsigned int length, [in, size = 16]unsigned char *tag);
  };
};